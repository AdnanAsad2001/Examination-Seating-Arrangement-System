/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditExamSubjectsAndBatches.java
 *
 */

package gui;

import core.DB;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class EditExamSubjectsAndBatches extends javax.swing.JFrame {
    static String examID;

    /** Creates new form EditExamSubjectsAndBatches */
    public EditExamSubjectsAndBatches() throws SQLException {
        initComponents();

        // load batch combo
        Vector v = new Vector();
        v.add("Select Batch");
        ResultSet r = DB.executeQuery("select id from batches");
        if (r != null) {
            while (r.next()) {
                v.add(r.getString("id"));
            }
        }
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(v));
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(v));
        // load subject combo
        v = new Vector();
        v.add("Select Subject");
        r = DB.executeQuery("select id from subjects");
        if (r != null) {
            while (r.next()) {
                v.add(r.getString("id"));
            }
        }
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(v));
        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(v));
        DB.flushStatementOnly();
        // initial load
        loadDataToFields();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox4 = new javax.swing.JComboBox();
        jComboBox5 = new javax.swing.JComboBox();
        jButton10 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jComboBox6 = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Exam Subject-Batches");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Batch" }));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Subject" }));

        jButton10.setText("Add Subject-Batch");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addSubjectBatch_MP(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Subject-Batch Details"));

        jButton11.setText("Save");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Save_MP(evt);
            }
        });

        jButton12.setText("Delete");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Delete_MP(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Batch" }));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Subject" }));

        jLabel22.setText("Batch");

        jLabel23.setText("Subject");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox8, 0, 209, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox6, 0, 209, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane7.setBorder(javax.swing.BorderFactory.createTitledBorder("Subject-Batch List"));

        jList4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subjectBatchesList_MP(evt);
            }
        });
        jScrollPane7.setViewportView(jList4);

        jButton1.setText("Search");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchMP(evt);
            }
        });

        jButton2.setText("Refresh List");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                refreshMP(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jComboBox4, 0, 300, Short.MAX_VALUE)
                    .addComponent(jComboBox5, 0, 300, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)))
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(610, 403));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addSubjectBatch_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addSubjectBatch_MP
        AddSubjectBatch.ExamID = examID;
        AddSubjectBatch.main(null);
}//GEN-LAST:event_addSubjectBatch_MP

    private void Save_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Save_MP
        if (jComboBox6.getSelectedItem().toString().contentEquals("Select Batch")) {
            JOptionPane.showMessageDialog(rootPane, "Select a Batch !!!");
        }
        else if (jComboBox8.getSelectedItem().toString().contentEquals("Select Subject")) {
            JOptionPane.showMessageDialog(rootPane, "Select a Subject !!!");
        }
        else {
            if (DB.executeUpdate("update examsubjectandbatches set "+
                    "batchid = "+ jComboBox6.getSelectedItem().toString() + ", "+
                    "subjectid = "+ jComboBox8.getSelectedItem().toString() + " where id = "+currentSubjectBatchID)) {
                JOptionPane.showMessageDialog(rootPane, "Subject-Batch Edited Susseccfully");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Subject-Batch Edition Failed !!!");
            }
        }
        loadDataToFields();
}//GEN-LAST:event_Save_MP

    private void Delete_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_MP
        if (JOptionPane.showConfirmDialog(rootPane, "Delete This Subject-Batch?", "Subject-Batch Delete", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            if (DB.executeUpdate("delete from examsubjectandbatches where id = "+currentSubjectBatchID)) {
                JOptionPane.showMessageDialog(rootPane, "Subject-Batch Deleted");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Subject-Batch Deletion Failed !!!");
            }
        }
        loadDataToFields();
}//GEN-LAST:event_Delete_MP

    String currentSubjectBatchID;
    private void subjectBatchesList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectBatchesList_MP
        if(jList4.getSelectedValue()!=null) {
            String selectedSubjectBatch[] = jList4.getSelectedValue().toString().split("-");
            ResultSet r = DB.executeQuery("select * from examsubjectandbatches where subjectid = " + selectedSubjectBatch[0] + " and batchid = " + selectedSubjectBatch[1]);
            try {
                r.next();
                jComboBox6.setSelectedItem(r.getString("batchid"));
                jComboBox8.setSelectedItem(r.getString("subjectid"));
                currentSubjectBatchID = r.getString("id");
            } 
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally {
                DB.flushStatementOnly();
            }
        }
}//GEN-LAST:event_subjectBatchesList_MP

    private void searchMP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMP
        try {
            ResultSet r = null;
            String subjectID=jComboBox5.getSelectedItem().toString();
            String batchID=jComboBox4.getSelectedItem().toString();

            if(subjectID.contentEquals("Select Subject") && !batchID.contentEquals("Select Batch")) {
                r = DB.executeQuery("select * from examsubjectandbatches where batchid ="+batchID+" and examid="+examID);
            }
            else if(!subjectID.contentEquals("Select Subject") && batchID.contentEquals("Select Batch")) {
                r = DB.executeQuery("select * from examsubjectandbatches where subjectid=" + subjectID +" and examid="+examID);
            }
            else if(!subjectID.contentEquals("Select Subject") && !batchID.contentEquals("Select Batch")) {
                r = DB.executeQuery("select * from examsubjectandbatches where subjectid=" + subjectID + " and batchid ="+batchID+" and examid="+examID);
            }
            else {
                r = DB.executeQuery("select * from examsubjectandbatches where examid="+examID);
            }
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("subjectid")+"-"+r.getString("batchid"));
            }
            jList4.setListData(v);
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_searchMP

    private void refreshMP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMP
        loadDataToFields();
    }//GEN-LAST:event_refreshMP

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new EditExamSubjectsAndBatches().setVisible(true);
                } 
                catch (SQLException ex) {
                    Logger.getLogger(EditExamSubjectsAndBatches.class.getName()).log(Level.SEVERE, null, ex);
                }
                finally {
                    DB.flushStatementOnly();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JList jList4;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane7;
    // End of variables declaration//GEN-END:variables

    private void loadDataToFields() {
        try {
            ResultSet r = DB.executeQuery("select * from examsubjectandbatches where examid="+examID);
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("subjectid")+"-"+r.getString("batchid"));
            }
            jList4.setListData(v);
        }
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }
}
