package gui;

import core.DB;
import core.PrintTable;
import core.SeatingArranger;
import core.Validator;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AdminWindow.java
 *
 */
/**
 *
 * @author admin
 */
public class AdminWindow extends javax.swing.JFrame {

    /** Creates new form AdminWindow */
    public AdminWindow() {
        
        // Don't want bold fonts if we end up using metal
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            DB.flushStatementOnly();
        } 
        catch (Exception ex) {
            System.out.println("Unable to load native look and feel");
        }

        initComponents();

        // centring the window...............................
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Dimension ssize = toolkit.getScreenSize();
        int x = (int) (ssize.getWidth() - this.getWidth()) / 2;
        int y = (int) (ssize.getHeight() - this.getHeight()) / 2;
        this.setLocation(x, y);
        //...................................................

        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            DB.flushStatementOnly();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jTextField1 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField6 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jTextField7 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jComboBox6 = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jComboBox5 = new javax.swing.JComboBox();
        jTextField8 = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList();
        jPanel5 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jComboBox9 = new javax.swing.JComboBox();
        jComboBox10 = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jTextField20 = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList8 = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList();
        jTextField14 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton19 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        jList7 = new javax.swing.JList();
        jTextField17 = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jComboBox7 = new javax.swing.JComboBox();
        jButton24 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jTextField26 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jButton29 = new javax.swing.JButton();
        jTextField25 = new javax.swing.JTextField();
        jScrollPane13 = new javax.swing.JScrollPane();
        jList9 = new javax.swing.JList();
        jButton28 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jButton35 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jTextField32 = new javax.swing.JTextField();
        jButton37 = new javax.swing.JButton();
        jTextField28 = new javax.swing.JTextField();
        jScrollPane15 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList();
        jPanel14 = new javax.swing.JPanel();
        jTextField27 = new javax.swing.JTextField();
        jScrollPane14 = new javax.swing.JScrollPane();
        jList10 = new javax.swing.JList();
        jPanel19 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jTextField30 = new javax.swing.JTextField();
        jButton30 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jTextField34 = new javax.swing.JTextField();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jTextField36 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jButton40 = new javax.swing.JButton();
        jTextField33 = new javax.swing.JTextField();
        jScrollPane16 = new javax.swing.JScrollPane();
        jList12 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Examination Seating Arrangement System");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                windowGF(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Hall List"));

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                hall_hallList_MP(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hall_search_ActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Hall Details"));

        jLabel1.setText("Name");

        jLabel2.setText("No. Of Rows");

        jLabel3.setText("No. Of Columns");

        jLabel4.setText("Description");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton1.setText("Save");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                halls_hallDetails_Save_MP(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                hall_hallDetails_Delete_MP(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        jButton3.setText("Add Hall");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Halls_AddHall_MP(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Halls", jPanel1);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Scheme Details"));

        jLabel5.setText("Name");

        jLabel6.setText("Description");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        jButton4.setText("Save");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                scheme_schemeDetails_Save_MP(evt);
            }
        });

        jButton5.setText("Delete");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                scheme_schemeDetails_Delete_MP(evt);
            }
        });

        jButton22.setText("More Info");
        jButton22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                scheme_schemeDetails_moreInfo_MP(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jButton22)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton4)
                    .addComponent(jButton22))
                .addContainerGap())
        );

        jButton6.setText("Add Scheme");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Scheme_AddScheme_MP(evt);
            }
        });

        jTextField5.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheme_search_ActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Scheme List"));

        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                scheme_schemeList_MP(evt);
            }
        });
        jScrollPane3.setViewportView(jList2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField5)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addGap(5, 5, 5)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Scheme", jPanel2);

        jButton7.setText("Add Staff");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Staff_AddStaff_MP(evt);
            }
        });

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Staff Details"));

        jLabel7.setText("Name");

        jLabel8.setText("Id");

        jButton8.setText("Save");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                staff_staffDetails_Save_MP(evt);
            }
        });

        jButton9.setText("Delete");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                staff_staffDetails_Delete_MP(evt);
            }
        });

        jLabel9.setText("Dept");

        jLabel10.setText("Description");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane6.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, 0, 359, Short.MAX_VALUE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextField7.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staff_search_ActionPerformed(evt);
            }
        });

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder("Staff List"));

        jList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                staff_staffList_MP(evt);
            }
        });
        jScrollPane5.setViewportView(jList3);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField7)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Staff", jPanel3);

        jButton10.setText("Add Student");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Student_AddStudent_MP(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Student Details"));

        jLabel11.setText("Name");

        jLabel12.setText("Exam Reg No.");

        jButton11.setText("Save");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                student_studentDetails_Save_MP(evt);
            }
        });

        jButton12.setText("Delete");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                student_studentDetails_Delete_MP(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Batch" }));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Dept" }));

        jLabel22.setText("Batch");

        jLabel23.setText("Dept");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField13, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                            .addComponent(jTextField12, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                            .addComponent(jComboBox6, 0, 345, Short.MAX_VALUE)
                            .addComponent(jComboBox8, 0, 345, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Batch" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                student_selectBatch_actionPerformed(evt);
            }
        });

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Dept" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                student_selectDept_actionPerformed(evt);
            }
        });

        jTextField8.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                student_search_ActionPerformed(evt);
            }
        });

        jScrollPane7.setBorder(javax.swing.BorderFactory.createTitledBorder("Student List"));

        jList4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                student_studentList_MP(evt);
            }
        });
        jScrollPane7.setViewportView(jList4);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox4, 0, 142, Short.MAX_VALUE)
                    .addComponent(jComboBox5, 0, 142, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(jTextField8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton10))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Student", jPanel4);

        jButton13.setText("Add Subject");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Subject_AddSubject_MP(evt);
            }
        });

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Subject Details"));

        jLabel13.setText("Name");

        jLabel14.setText("Subject Id");

        jLabel16.setText("Description");

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane9.setViewportView(jTextArea4);

        jButton14.setText("Save");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subject_subjectDetails_Save_MP(evt);
            }
        });

        jButton15.setText("Delete");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subject_subjectDetails_Delete_MP(evt);
            }
        });

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Scheme" }));

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Semester", "1 & 2", "3", "4", "5", "6", "7", "8" }));

        jLabel24.setText("Scheme");

        jLabel25.setText("Semester");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField16, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(jTextField15, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox10, 0, 263, Short.MAX_VALUE)
                            .addComponent(jComboBox9, 0, 263, Short.MAX_VALUE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addContainerGap(216, Short.MAX_VALUE)
                        .addComponent(jButton14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton15)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(jButton14))
                .addGap(7, 7, 7))
        );

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Scheme" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subject_SelectScheme_ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Semester", "1 & 2", "3", "4", "5", "6", "7", "8" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subject_SelectSemester_ActionPerformed(evt);
            }
        });

        jTextField20.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subject_search_ActionPerformed(evt);
            }
        });

        jScrollPane12.setBorder(javax.swing.BorderFactory.createTitledBorder("Subject List"));

        jList8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subject_subjectList_MP(evt);
            }
        });
        jScrollPane12.setViewportView(jList8);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                    .addComponent(jTextField20, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                    .addComponent(jComboBox3, 0, 316, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, 316, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton13)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton13))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Subject", jPanel5);

        jButton16.setText("Add Dept");
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Dept_AddDept_MP(evt);
            }
        });

        jScrollPane10.setBorder(javax.swing.BorderFactory.createTitledBorder("Dept List"));

        jList6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dept_deptList_MP(evt);
            }
        });
        jScrollPane10.setViewportView(jList6);

        jTextField14.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dept_search_ActionPerformed(evt);
            }
        });

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Dept Details"));

        jLabel15.setText("Name");

        jLabel17.setText("Dept Id");

        jButton17.setText("Save");
        jButton17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dept_deptDetails_Save_MP(evt);
            }
        });

        jButton18.setText("Delete");
        jButton18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dept_deptDetails_Delete_MP(evt);
            }
        });

        jButton23.setText("More Info");
        jButton23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dept_deptDetails_moreInfo_MP(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addComponent(jButton23)
                        .addGap(18, 18, 18)
                        .addComponent(jButton17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton18))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField19, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addComponent(jTextField18, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton18)
                    .addComponent(jButton17)
                    .addComponent(jButton23))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField14, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton16))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton16)
                        .addGap(162, 162, 162))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dept", jPanel6);

        jButton19.setText("Add Batch");
        jButton19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Batch_AddBatch_MP(evt);
            }
        });

        jScrollPane11.setBorder(javax.swing.BorderFactory.createTitledBorder("Batch List"));

        jList7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                batch_batchList_MP(evt);
            }
        });
        jScrollPane11.setViewportView(jList7);

        jTextField17.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batch_search_ActionPerformed(evt);
            }
        });

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Batch Details"));

        jLabel18.setText("Name");

        jLabel19.setText("Batch No.");

        jLabel20.setText("Scheme");

        jButton20.setText("Save");
        jButton20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                batch_batchDetails_Save_MP(evt);
            }
        });

        jButton21.setText("Delete");
        jButton21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                batch_batchDetails_Delete_MP(evt);
            }
        });

        jButton24.setText("More Info");
        jButton24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                batch_batchDetails_moreInfo_MP(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField22)
                            .addComponent(jTextField21)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton24)
                                .addGap(18, 18, 18)
                                .addComponent(jButton20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton21))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox7, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton21)
                    .addComponent(jButton20)
                    .addComponent(jButton24))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton34.setText("Print Batch Students");
        jButton34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                batch_printBatchStudents_MP(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addComponent(jTextField17, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton19)
                    .addComponent(jButton34))
                .addContainerGap())
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton19, jButton34});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton19)
                        .addGap(18, 18, 18)
                        .addComponent(jButton34))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Batch", jPanel7);

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Exam Details"));

        jLabel26.setText("Name");

        jLabel27.setText("Date");

        jButton25.setText("Save");
        jButton25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ExamDetails_Save_MP(evt);
            }
        });

        jButton26.setText("Delete");
        jButton26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ExamDetails_Delete_MP(evt);
            }
        });

        jButton27.setText("More Info");
        jButton27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                examDetails_moreInfo_MP(evt);
            }
        });

        jLabel28.setText("Time");

        jLabel29.setText("Description");

        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane8.setViewportView(jTextArea5);

        jButton29.setText("Edit Subject & Batches");
        jButton29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exam_examDetails_EditSubjectAndBatches_MP(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(jTextField24, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(jTextField23, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(jTextField26, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(jButton25, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jButton27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton29))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jButton25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton26)))
                .addContainerGap())
        );

        jTextField25.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exam_search_ActionPerformed(evt);
            }
        });

        jScrollPane13.setBorder(javax.swing.BorderFactory.createTitledBorder("Exam List"));

        jList9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exam_examList_MP(evt);
            }
        });
        jScrollPane13.setViewportView(jList9);

        jButton28.setText("Add Exam");
        jButton28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exam_AddExam_MP(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jTextField25, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton28)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton28))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Exam", jPanel12);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Exam Seating Details"));

        jLabel32.setText("Seating Arranged");

        jTextField31.setEditable(false);

        jButton35.setText("Absenties");
        jButton35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendance_absenties_MP(evt);
            }
        });

        jLabel33.setText("Exam Name");

        jTextField32.setEditable(false);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField31, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                            .addComponent(jTextField32, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jButton35, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton35)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton37.setText("Print Absentiees List");
        jButton37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendance_printAbsentiesList_MP(evt);
            }
        });

        jTextField28.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendance_searchExam_ActionPerformed(evt);
            }
        });

        jScrollPane15.setBorder(javax.swing.BorderFactory.createTitledBorder("Exam List"));

        jList11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendance_examList_MP(evt);
            }
        });
        jScrollPane15.setViewportView(jList11);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(jTextField28, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton37))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton37))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Attendance", jPanel13);

        jTextField27.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Seatingexam_searchExam_ActionPerformed(evt);
            }
        });

        jScrollPane14.setBorder(javax.swing.BorderFactory.createTitledBorder("Exam List"));

        jList10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                seatingexam_examList_MP(evt);
            }
        });
        jScrollPane14.setViewportView(jList10);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Exam Seating Details"));

        jLabel30.setText("Seating Arranged");

        jTextField29.setEditable(false);

        jButton31.setText("Arrange Seats");
        jButton31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                seating_examSeating_arrangeSeating_MP(evt);
            }
        });

        jButton32.setText("Clear Seating");
        jButton32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                seating_examSeating_clearSeating_MP(evt);
            }
        });

        jLabel31.setText("Exam Name");

        jTextField30.setEditable(false);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField29, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                            .addComponent(jTextField30, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jButton32)
                        .addGap(18, 18, 18)
                        .addComponent(jButton31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel19Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton31, jButton32});

        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton31)
                    .addComponent(jButton32))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton30.setText("Print Seating Chart");
        jButton30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                seating_printSeatingChart_MP(evt);
            }
        });

        jButton33.setText("Check Seating");
        jButton33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                seating_checkSeating_MP(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(jTextField27, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton30)
                    .addComponent(jButton33))
                .addContainerGap())
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton30, jButton33});

        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton30)
                        .addGap(18, 18, 18)
                        .addComponent(jButton33))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Seating", jPanel14);

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("User Data"));

        jLabel21.setText("User Name");

        jButton38.setText("Save");
        jButton38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                user_updateMP(evt);
            }
        });

        jButton39.setText("Delete");
        jButton39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                user_deleteMP(evt);
            }
        });

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Admin", "User" }));

        jLabel35.setText("Type");

        jLabel36.setText("Login Name");

        jLabel37.setText("Description");

        jTextArea6.setColumns(20);
        jTextArea6.setRows(5);
        jScrollPane17.setViewportView(jTextArea6);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel21)
                        .addGap(5, 5, 5)
                        .addComponent(jTextField34, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel35)
                            .addComponent(jLabel36)
                            .addComponent(jLabel37))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                                .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField36, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(jComboBox11, 0, 262, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jPanel23Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton38, jButton39});

        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton39)
                    .addComponent(jButton38))
                .addContainerGap())
        );

        jButton40.setText("Add User");
        jButton40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addUserMP(evt);
            }
        });

        jTextField33.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jTextField33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_search_ActionPerformed(evt);
            }
        });

        jList12.setBorder(javax.swing.BorderFactory.createTitledBorder("User List"));
        jList12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                userListMP(evt);
            }
        });
        jScrollPane16.setViewportView(jList12);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(jTextField33, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton40)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Users", jPanel21);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Halls_AddHall_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Halls_AddHall_MP
        AddHall.main(null);
    }//GEN-LAST:event_Halls_AddHall_MP

    private void Scheme_AddScheme_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Scheme_AddScheme_MP
        AddScheme.main(null);
    }//GEN-LAST:event_Scheme_AddScheme_MP

    private void Staff_AddStaff_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Staff_AddStaff_MP
        AddStaff.main(null);
    }//GEN-LAST:event_Staff_AddStaff_MP

    private void Student_AddStudent_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Student_AddStudent_MP
        AddStudent.main(null);
    }//GEN-LAST:event_Student_AddStudent_MP

    private void Subject_AddSubject_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Subject_AddSubject_MP
        AddSubject.main(null);
    }//GEN-LAST:event_Subject_AddSubject_MP

    private void Dept_AddDept_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Dept_AddDept_MP
        AddDept.main(null);
    }//GEN-LAST:event_Dept_AddDept_MP

    private void Batch_AddBatch_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Batch_AddBatch_MP
        AddBatch.main(null);
    }//GEN-LAST:event_Batch_AddBatch_MP

    private void student_selectBatch_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_selectBatch_actionPerformed
        loadStudentList();
    }//GEN-LAST:event_student_selectBatch_actionPerformed

    private void student_selectDept_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_selectDept_actionPerformed
        loadStudentList();
    }//GEN-LAST:event_student_selectDept_actionPerformed

    private void subject_SelectScheme_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subject_SelectScheme_ActionPerformed
        loadSubjectList();
    }//GEN-LAST:event_subject_SelectScheme_ActionPerformed

    private void subject_SelectSemester_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subject_SelectSemester_ActionPerformed
        loadSubjectList();
    }//GEN-LAST:event_subject_SelectSemester_ActionPerformed
    String currentHallID;
    private void hall_hallList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hall_hallList_MP
        if (jList1.getSelectedValue() != null) {
            String selectedHall = jList1.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from halls where name = '" + selectedHall + "'");
            try {
                r.next();
                jTextField4.setText(r.getString("name"));
                jTextField3.setText(r.getString("noofrow"));
                jTextField2.setText(r.getString("noofcol"));
                jTextArea1.setText(r.getString("description"));
                currentHallID = r.getString("id");
            } 
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
    }//GEN-LAST:event_hall_hallList_MP
    String currentSchemeID;
    private void scheme_schemeList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheme_schemeList_MP
        if (jList2.getSelectedValue() != null) {
            String selectedScheme = jList2.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from schemes where id = '" + selectedScheme + "'");
            try {
                r.next();
                jTextField6.setText(r.getString("id"));
                jTextArea2.setText(r.getString("description"));
                currentSchemeID = r.getString("id");
            }
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
    }//GEN-LAST:event_scheme_schemeList_MP
    String currentStaffID;
    private void staff_staffList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staff_staffList_MP
        if (jList3.getSelectedValue() != null) {
            String selectedStaff = jList3.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from staffs where name = '" + selectedStaff + "'");
            try {
                r.next();
                jTextField10.setText(r.getString("name"));
                jTextField9.setText(r.getString("id"));
                jComboBox1.setSelectedItem(r.getString("deptid"));
                jTextArea3.setText(r.getString("description"));
                currentStaffID = r.getString("id");
            }
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
    }//GEN-LAST:event_staff_staffList_MP
    String currentStudentID;
    private void student_studentList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_student_studentList_MP
        if (jList4.getSelectedValue() != null) {
            String selectedStudent = jList4.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from students where name = '" + selectedStudent + "'");
            try {
                r.next();
                jTextField13.setText(r.getString("name"));
                jTextField12.setText(r.getString("regno"));
                jComboBox6.setSelectedItem(r.getString("batchid"));
                jComboBox8.setSelectedItem(r.getString("deptid"));
                currentStudentID = r.getString("regno");
            } 
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
    }//GEN-LAST:event_student_studentList_MP

    private void scheme_search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheme_search_ActionPerformed
        try {
            ResultSet r = DB.executeQuery("select id from schemes where id like '%" + jTextField5.getText() + "%'");
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("id"));
            }
            jList2.setListData(v);
        } catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
                DB.flushStatementOnly();
        }
    }//GEN-LAST:event_scheme_search_ActionPerformed

    private void hall_search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hall_search_ActionPerformed
        try {
            ResultSet r = DB.executeQuery("select name from halls where name like '%" + jTextField1.getText() + "%'");
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("name"));
            }
            jList1.setListData(v);
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_hall_search_ActionPerformed

    private void staff_search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staff_search_ActionPerformed
        try {
            ResultSet r = DB.executeQuery("select name from staffs where name like '%" + jTextField7.getText() + "%'");
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("name"));
            }
            jList3.setListData(v);
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_staff_search_ActionPerformed

    private void student_search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_search_ActionPerformed
        loadStudentList();
    }//GEN-LAST:event_student_search_ActionPerformed

    private void subject_search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subject_search_ActionPerformed
        loadSubjectList();
    }//GEN-LAST:event_subject_search_ActionPerformed

    private void dept_search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dept_search_ActionPerformed
        try {
            ResultSet r = DB.executeQuery("select id from departments where name like '%" + jTextField14.getText() + "%'");
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("id"));
            }
            jList6.setListData(v);
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_dept_search_ActionPerformed

    private void batch_search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batch_search_ActionPerformed
        try {
            ResultSet r = DB.executeQuery("select id from batches where id like '%" + jTextField17.getText() + "%'");
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("id"));
            }
            jList7.setListData(v);
        }
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_batch_search_ActionPerformed
    String currentSubjectID;
    private void subject_subjectList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subject_subjectList_MP
        if (jList8.getSelectedValue() != null) {
            String selectedSubject = jList8.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from subjects where name = '" + selectedSubject + "'");
            try {
                r.next();
                jTextField16.setText(r.getString("name"));
                jTextField15.setText(r.getString("id"));
                jComboBox9.setSelectedItem(r.getString("schemeid"));
                jComboBox10.setSelectedItem(r.getString("semester"));
                jTextArea4.setText(r.getString("description"));
                currentSubjectID = r.getString("id");
            } 
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
    }//GEN-LAST:event_subject_subjectList_MP
    String currentDeptID;
    private void dept_deptList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dept_deptList_MP
        if (jList6.getSelectedValue() != null) {
            String selectedDept = jList6.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from departments where id = '" + selectedDept + "'");
            try {
                r.next();
                jTextField19.setText(r.getString("name"));
                jTextField18.setText(r.getString("id"));
                currentDeptID = r.getString("id");
            } 
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
    }//GEN-LAST:event_dept_deptList_MP
    String currentBatchID = "";
    private void batch_batchList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batch_batchList_MP
        if (jList7.getSelectedValue() != null) {
            String selectedBatch = jList7.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from batches where id = " + selectedBatch);
            try {
                r.next();
                jTextField22.setText(r.getString("name"));
                jTextField21.setText(r.getString("id"));
                jComboBox7.setSelectedItem(r.getString("schemeid"));
                currentBatchID = r.getString("id");
            } 
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
    }//GEN-LAST:event_batch_batchList_MP

    private void hall_hallDetails_Delete_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hall_hallDetails_Delete_MP
        if (JOptionPane.showConfirmDialog(rootPane, "Delete This Hall?", "Hall Delete", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            if (DB.executeUpdate("delete from halls where id = " + currentHallID)) {
                JOptionPane.showMessageDialog(rootPane, "Hall Deleted");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Hall Deletion Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_hall_hallDetails_Delete_MP

    private void scheme_schemeDetails_Delete_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheme_schemeDetails_Delete_MP
        if (JOptionPane.showConfirmDialog(rootPane, "Delete This Scheme?", "Scheme Delete", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            if (DB.executeUpdate("delete from schemes where id = '" + currentSchemeID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Scheme Deleted");
            } 
            else {
                JOptionPane.showMessageDialog(rootPane, "Scheme Deletion Failed !!!");
            }
        }
        try {
            loadDataToFields();
        }
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_scheme_schemeDetails_Delete_MP

    private void staff_staffDetails_Delete_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staff_staffDetails_Delete_MP
        if (JOptionPane.showConfirmDialog(rootPane, "Delete This Staff?", "Staff Delete", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            if (DB.executeUpdate("delete from staffs where id = '" + currentStaffID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Staff Deleted");
            } 
            else {
                JOptionPane.showMessageDialog(rootPane, "Staff Deletion Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_staff_staffDetails_Delete_MP

    private void student_studentDetails_Delete_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_student_studentDetails_Delete_MP
        if (JOptionPane.showConfirmDialog(rootPane, "Delete This Student?", "Student Delete", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            if (DB.executeUpdate("delete from students where regno = '" + currentStudentID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Student Deleted");
            } 
            else {
                JOptionPane.showMessageDialog(rootPane, "Student Deletion Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_student_studentDetails_Delete_MP

    private void subject_subjectDetails_Delete_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subject_subjectDetails_Delete_MP
        if (JOptionPane.showConfirmDialog(rootPane, "Delete This Subject?", "Subject Delete", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            if (DB.executeUpdate("delete from subjects where id = '" + currentSubjectID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Subject Deleted");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Subject Deletion Failed !!!");
            }
        }
        try {
            loadDataToFields();
        }
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_subject_subjectDetails_Delete_MP

    private void dept_deptDetails_Delete_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dept_deptDetails_Delete_MP
        if (JOptionPane.showConfirmDialog(rootPane, "Delete This Department?", "Department Delete", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            if (DB.executeUpdate("delete from departments where id = '" + currentDeptID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Department Deleted");
            } 
            else {
                JOptionPane.showMessageDialog(rootPane, "Department Deletion Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_dept_deptDetails_Delete_MP

    private void batch_batchDetails_Delete_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batch_batchDetails_Delete_MP
        if (JOptionPane.showConfirmDialog(rootPane, "Delete This Batch?", "Batch Delete", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            if (DB.executeUpdate("delete from batches where id = " + currentBatchID)) {
                JOptionPane.showMessageDialog(rootPane, "Batch Deleted");
            } 
            else {
                JOptionPane.showMessageDialog(rootPane, "Batch Deletion Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_batch_batchDetails_Delete_MP

    private void halls_hallDetails_Save_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_halls_hallDetails_Save_MP
        if (jTextField4.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Hall Name !!!");
        }
        else if (jTextField3.getText().isEmpty() || !Validator.isNumber(jTextField3.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Enter Valid Row No. !!!");
        } 
        else if (jTextField2.getText().isEmpty() || !Validator.isNumber(jTextField2.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Enter Valid Col No. !!!");
        }
        else {
            if (DB.executeUpdate("update halls set "
                    + "name = '" + jTextField4.getText() + "', "
                    + "noofrow = " + jTextField3.getText() + ", "
                    + "noofcol = " + jTextField2.getText() + ", "
                    + "description = '" + jTextArea1.getText() + "' "
                    + "where id = " + currentHallID)) {
                JOptionPane.showMessageDialog(rootPane, "Hall Edited Susseccfully");
            } 
            else {
                JOptionPane.showMessageDialog(rootPane, "Hall Edition Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_halls_hallDetails_Save_MP

    private void scheme_schemeDetails_Save_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheme_schemeDetails_Save_MP
        if (jTextField6.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Scheme Name !!!");
        }
        else {
            if (DB.executeUpdate("update schemes set "
                    + "id = '" + jTextField6.getText() + "', "
                    + "description = '" + jTextArea2.getText() + "' "
                    + "where id = '" + currentSchemeID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Scheme Edited Susseccfully");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Scheme Edition Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_scheme_schemeDetails_Save_MP

    private void staff_staffDetails_Save_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staff_staffDetails_Save_MP
        if (jTextField10.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Staff Name !!!");
        }
        else if (jTextField9.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Staff ID !!!");
        }
        else if (jComboBox1.getSelectedItem().toString().contentEquals("Select Dept")) {
            JOptionPane.showMessageDialog(rootPane, "Select a Department !!!");
        }
        else {
            if (DB.executeUpdate("update staffs set "
                    + "name = '" + jTextField10.getText() + "', "
                    + "id = '" + jTextField9.getText() + "', "
                    + "deptid = '" + jComboBox1.getSelectedItem().toString() + "', "
                    + "description = '" + jTextArea3.getText() + "' where id = '" + currentStaffID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Staffs Edited Susseccfully");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Staffs Edition Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_staff_staffDetails_Save_MP

    private void student_studentDetails_Save_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_student_studentDetails_Save_MP
        if (jTextField13.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Student Name !!!");
        }
        else if (jTextField12.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Student Exam Reg No. !!!");
        }
        else if (jComboBox6.getSelectedItem().toString().contentEquals("Select Batch")) {
            JOptionPane.showMessageDialog(rootPane, "Select a Batch !!!");
        }
        else if (jComboBox8.getSelectedItem().toString().contentEquals("Select Dept")) {
            JOptionPane.showMessageDialog(rootPane, "Select a Department !!!");
        }
        else {
            if (DB.executeUpdate("update students set "
                    + "regno = '" + jTextField12.getText() + "', "
                    + "name = '" + jTextField13.getText() + "', "
                    + "batchid = " + jComboBox6.getSelectedItem().toString() + ", "
                    + "deptid = '" + jComboBox8.getSelectedItem().toString() + "' where regno = '" + currentStudentID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Students Edited Susseccfully");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Students Edition Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_student_studentDetails_Save_MP

    private void subject_subjectDetails_Save_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subject_subjectDetails_Save_MP
        if (jTextField16.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Subject Name !!!");
        }
        else if (jTextField15.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Subject ID !!!");
        }
        else if (jComboBox9.getSelectedItem().toString().contentEquals("Select Scheme")) {
            JOptionPane.showMessageDialog(rootPane, "Select a Scheme !!!");
        }
        else if (jComboBox10.getSelectedItem().toString().contentEquals("Select Semester")) {
            JOptionPane.showMessageDialog(rootPane, "Select a Semester !!!");
        }
        else {

            if (DB.executeUpdate("update subjects set "
                    + "id = '" + jTextField15.getText() + "', "
                    + "name = '" + jTextField16.getText() + "', "
                    + "schemeid = '" + jComboBox9.getSelectedItem().toString() + "', "
                    + "semester = '" + jComboBox10.getSelectedItem().toString() + "', "
                    + "description = '" + jTextArea4.getText() + "' where id = '" + currentSubjectID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Subject Edited Susseccfully");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Subject Edition Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_subject_subjectDetails_Save_MP

    private void dept_deptDetails_Save_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dept_deptDetails_Save_MP
        if (jTextField19.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Dept Name !!!");
        }
        else if (jTextField18.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Dept ID !!!");
        }
        else {
            if (DB.executeUpdate("update departments set "
                    + "name ='" + jTextField19.getText() + "', "
                    + "id = '" + jTextField18.getText() + "' "
                    + "where id = '" + currentDeptID + "'")) {
                JOptionPane.showMessageDialog(rootPane, "Department Edited Susseccfully");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Department Edition Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_dept_deptDetails_Save_MP

    private void batch_batchDetails_Save_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batch_batchDetails_Save_MP
        if (jTextField22.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Batch Name !!!");
        }
        else if (jTextField21.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Batch No. !!!");
        }
        else if (jComboBox7.getSelectedItem().toString().contentEquals("Select Scheme")) {
            JOptionPane.showMessageDialog(rootPane, "Select a Scheme !!!");
        }
        else {
            if (DB.executeUpdate("update batches set "
                    + "name = '" + jTextField22.getText() + "', "
                    + "id = " + jTextField21.getText() + " , "
                    + "schemeid = '" + jComboBox7.getSelectedItem().toString() + "' "
                    + "where id = " + currentBatchID)) {
                JOptionPane.showMessageDialog(rootPane, "Batch Edited Susseccfully");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Batch Edition Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_batch_batchDetails_Save_MP

    private void scheme_schemeDetails_moreInfo_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheme_schemeDetails_moreInfo_MP
        MoreInfoScheme.schemeID = currentSchemeID;
        MoreInfoScheme.main(null);
    }//GEN-LAST:event_scheme_schemeDetails_moreInfo_MP

    private void dept_deptDetails_moreInfo_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dept_deptDetails_moreInfo_MP
        MoreInfoDept.deptID = currentDeptID;
        MoreInfoDept.main(null);
    }//GEN-LAST:event_dept_deptDetails_moreInfo_MP

    private void batch_batchDetails_moreInfo_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batch_batchDetails_moreInfo_MP
        MoreInfoBatch.batchID = currentBatchID;
        MoreInfoBatch.main(null);
    }//GEN-LAST:event_batch_batchDetails_moreInfo_MP

    private void ExamDetails_Save_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExamDetails_Save_MP
        if (jTextField24.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Exam Name !!!");
        }
        else if (jTextField23.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Exam Date !!!");
        }
        else if (jTextField26.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Exam Time !!!");
        }
        else {
            if (DB.executeUpdate("update exams set "
                    + "name = '" + jTextField24.getText() + "', "
                    + "date = '" + jTextField23.getText() + "', "
                    + "time = '" + jTextField26.getText() + "', "
                    + "description = '" + jTextArea5.getText() + "' "
                    + "where id = " + currentExamID)) {
                JOptionPane.showMessageDialog(rootPane, "Exam Edited Susseccfully");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Exam Edition Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
}//GEN-LAST:event_ExamDetails_Save_MP

    private void ExamDetails_Delete_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExamDetails_Delete_MP
        if (JOptionPane.showConfirmDialog(rootPane, "Delete This Exam?", "Exam Delete", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            if (DB.executeUpdate("delete from exams where id = " + currentExamID)) {
                JOptionPane.showMessageDialog(rootPane, "Exam Deleted");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Exam Deletion Failed !!!");
            }
        }
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
}//GEN-LAST:event_ExamDetails_Delete_MP

    private void examDetails_moreInfo_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examDetails_moreInfo_MP
        MoreInfoExam.examID = currentExamID;
        MoreInfoExam.main(null);
}//GEN-LAST:event_examDetails_moreInfo_MP

    private void exam_search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exam_search_ActionPerformed
        try {
            ResultSet r = DB.executeQuery("select name from exams where name like '%" + jTextField25.getText() + "%'");
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("name"));
            }
            jList9.setListData(v);
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
}//GEN-LAST:event_exam_search_ActionPerformed
    String currentExamID;
    private void exam_examList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exam_examList_MP
        if (jList9.getSelectedValue() != null) {
            String selectedExam = jList9.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from exams where name = '" + selectedExam + "'");
            try {
                r.next();
                jTextField24.setText(r.getString("name"));
                jTextField23.setText(r.getString("date"));
                jTextField26.setText(r.getString("time"));
                jTextArea5.setText(r.getString("description"));
                currentExamID = r.getString("id");
            } 
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
}//GEN-LAST:event_exam_examList_MP

    private void exam_AddExam_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exam_AddExam_MP
        AddExam.main(null);
}//GEN-LAST:event_exam_AddExam_MP

    private void exam_examDetails_EditSubjectAndBatches_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exam_examDetails_EditSubjectAndBatches_MP
        if (currentExamID != null && !currentExamID.isEmpty()) {
            EditExamSubjectsAndBatches.examID = currentExamID;
            EditExamSubjectsAndBatches.main(null);
        } 
        else {
            JOptionPane.showMessageDialog(rootPane, "Select a Exam !!!");
        }
    }//GEN-LAST:event_exam_examDetails_EditSubjectAndBatches_MP

    private void Seatingexam_searchExam_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Seatingexam_searchExam_ActionPerformed
        try {
            ResultSet r = DB.executeQuery("select name from exams where name like '%" + jTextField27.getText() + "%'");
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("name"));
            }
            jList10.setListData(v);
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_Seatingexam_searchExam_ActionPerformed
    String currentSeatingExamID = "";
    private void seatingexam_examList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seatingexam_examList_MP
        if (jList10.getSelectedValue() != null) {
            String selectedSeatingExam = jList10.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from exams where name = '" + selectedSeatingExam + "'");
            try {
                r.next();
                jTextField30.setText(r.getString("name"));
                currentSeatingExamID = r.getString("id");
                DB.flushStatementOnly();
                r = DB.executeQuery("select count(*) from seatings where examid = " + currentSeatingExamID);
                if (r != null && r.next() && Integer.parseInt(r.getString(1)) > 0) {
                    jTextField29.setText("ARRANGED");
                }
                else {
                    jTextField29.setText("NOT ARRANGED");
                }

            }
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
    }//GEN-LAST:event_seatingexam_examList_MP

    private void seating_examSeating_clearSeating_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seating_examSeating_clearSeating_MP
        try {
            if (currentSeatingExamID.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Select a Exam for Clearing Seating Arrangements!!!");
            }
            else {
                ResultSet r = DB.executeQuery("select count(*) from seatings where examid = " + currentSeatingExamID);
                if (r != null && r.next() && Integer.parseInt(r.getString(1)) > 0) {
                    DB.flushStatementOnly();
                    if (JOptionPane.showConfirmDialog(rootPane, "Clear Seating for this Exam?", "Clear Seating", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
                        if (DB.executeUpdate("delete from seatings where examid = " + currentSeatingExamID)) {
                            JOptionPane.showMessageDialog(rootPane, "Exam Seating Deleted");
                        }
                        else {
                            JOptionPane.showMessageDialog(rootPane, "Exam Seating Deletion Failed !!!");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No Seating Arranged for this Exam !!!");
                }

            }
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_seating_examSeating_clearSeating_MP

    private void seating_examSeating_arrangeSeating_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seating_examSeating_arrangeSeating_MP
        if (currentSeatingExamID.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Select a Exam for Seat Arranging!!!");
        }
        else {
            SeatingArranger.ExamID = currentSeatingExamID;
            ExamSeatingArranger.main(null);
        }
    }//GEN-LAST:event_seating_examSeating_arrangeSeating_MP

    private void windowGF(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowGF
        try {
            loadDataToFields();
        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_windowGF

    private void batch_printBatchStudents_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batch_printBatchStudents_MP
        if (currentBatchID.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Select a Batch !!!");
        } 
        else {
            ResultSet r = DB.executeQuery("select * from students where batchid=" + currentBatchID + " order by deptid");
            if (r != null) {
                try {
                    String[][] rowData = null;
                    // table showing two columns of student datas ..........
                    String[] columnNames = {"Name", "Dept", "Reg No."};
                    DB.flushStatementOnly();
                    ResultSet r2 = DB.executeQuery("select count(*) from students where batchid=" + currentBatchID);
                    r2.next();
                    int noOfStudents = Integer.parseInt(r2.getString(1));

                    rowData = new String[noOfStudents][3];
                    // load student datas ...............
                    int ri = 0;
                    while (r.next()) {
                        rowData[ri][0] = r.getString("name");
                        rowData[ri][1] = r.getString("deptid");
                        rowData[ri][2] = r.getString("regno");
                        ri++;
                    }
                    // printing students data (name + regno) ............
                    new PrintTable("Batch Students", "Batch ID:" + currentBatchID, rowData, columnNames);
                } 
                catch (SQLException ex) {
                    Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                finally{
                    DB.flushStatementOnly();
                }
            } 
            else {
                JOptionPane.showMessageDialog(rootPane, "No Students in This Batch !!!");
            }
        }
    }//GEN-LAST:event_batch_printBatchStudents_MP

    private void seating_printSeatingChart_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seating_printSeatingChart_MP
        if (!currentSeatingExamID.isEmpty()) {
            try {
                // get the list of halls for the exam...
                Vector<String> Halls = new Vector<String>();
                ResultSet r = DB.executeQuery("select distinct hallname from seatings where examid=" + currentSeatingExamID);
                while (r != null && r.next()) {
                    Halls.add(r.getString("hallname"));
                }
                DB.flushStatementOnly();

                // for each hall......................................
                for (String hall : Halls) {
                    // get the noofrow and noofcol for that hall...
                    int noofrow = 0, noofcol = 0;
                    r = DB.executeQuery("select noofrow,noofcol from halls where name='" + hall + "'");
                    r.next();
                    noofrow = Integer.parseInt(r.getString("noofrow"));
                    noofcol = Integer.parseInt(r.getString("noofcol"));
                    DB.flushStatementOnly();
                    // create rowdata [noofrow][2*noofcol]
                    String rowData[][] = new String[noofrow][2 * noofcol];
                    // create coldata [2*noofcol];
                    String colData[] = new String[2 * noofcol];
                    // populate coldata with headers......
                    for (int i = 0; i < colData.length; i++) {
                        if (i % 2 == 0) {
                            colData[i] = "Left";
                        } else {
                            colData[i] = "Right";
                        }
                    }
                    // initialsize seatno = 1;
                    int SeatNo = 1;
                    // for : noofcol - ic=0 ; ic+=2 ;
                    // for : noofrow - ir=0 ; ir++ ;
                    for (int ic = 0; ic < noofcol; ic += 2) {
                        for (int ir = 0; ir < noofrow; ir++) {
                            // get regid for seat+"L" and seat+"R"
                            // save it in rowdata[ir][ic] and rowdata[ir][ic+1];
                            r = DB.executeQuery("select studentregno from seatings where seatno='" + SeatNo + "L" + "' and hallname='" + hall + "' and examid=" + currentSeatingExamID);
                            if (r.next()) {
                                rowData[ir][ic] = r.getString("studentregno");
                            }
                            DB.flushStatementOnly();
                            r = DB.executeQuery("select studentregno from seatings where seatno='" + SeatNo + "R" + "' and hallname='" + hall + "' and examid=" + currentSeatingExamID);
                            if (r.next()) {
                                rowData[ir][ic + 1] = r.getString("studentregno");
                            }
                            DB.flushStatementOnly();
                            SeatNo++;
                        }
                    }
                    // print table...
                    new PrintTable("Hall Seating", "Hall Name: " + hall, rowData, colData);
                }
            } 
            catch (SQLException ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        } 
        else {
            JOptionPane.showMessageDialog(rootPane, "Select a Exam !!!");
        }
    }//GEN-LAST:event_seating_printSeatingChart_MP

    private void seating_checkSeating_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seating_checkSeating_MP
        if (!currentSeatingExamID.isEmpty()) {
            SeatingCheck.currentSeatingExamID = currentSeatingExamID;
            SeatingCheck.main(null);
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Select a Exam !!!");
        }
    }//GEN-LAST:event_seating_checkSeating_MP

    private void attendance_absenties_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendance_absenties_MP
        if (!jTextField31.getText().contentEquals("NOT ARRANGED")) {
            Absentees.currentAttendanceExamID = currentAttendanceExamID;
            Absentees.main(null);
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Seating Not Arranged for this Exam ! No Absentee for this Exam !!!");
        }
    }//GEN-LAST:event_attendance_absenties_MP

    private void attendance_printAbsentiesList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendance_printAbsentiesList_MP
        if (!jTextField31.getText().contentEquals("NOT ARRANGED")) {
            try {
                // print absentees for this exam ... currentAttendanceExamID
                Vector<String> absentees = new Vector<String>();
                ResultSet r = DB.executeQuery("select studentregno from absentees where examid=" + currentAttendanceExamID + " order by studentregno");
                // load all absentees regno ..............................
                while (r != null && r.next()) {
                    absentees.add(r.getString("studentregno"));
                }
                // find halls and seat no of each individual absentees ........................
                Vector<String> hall = new Vector<String>();
                Vector<String> seatno = new Vector<String>();
                Vector<String> studentname = new Vector<String>();
                for (String abst : absentees) {
                    r = DB.executeQuery("select hallname,seatno from seatings where studentregno='" + abst + "' and examid=" + currentAttendanceExamID);
                    r.next();
                    hall.add(r.getString("hallname"));
                    seatno.add(r.getString("seatno"));
                    DB.flushStatementOnly();
                    r = DB.executeQuery("select name from students where regno='" + abst + "'");
                    r.next();
                    studentname.add(r.getString("name"));
                    DB.flushStatementOnly();
                }
                // populate data for printing .......
                // create rowdata
                String rowData[][] = new String[absentees.size()][4];
                // create coldata , populate coldata with headers......
                String colData[] = {"Reg No.", "Name", "Hall", "Seat No."};
                // for each absentees .................................
                for (int i = 0; i < absentees.size(); i++) {
                    rowData[i][0] = absentees.elementAt(i);
                    rowData[i][1] = studentname.elementAt(i);
                    rowData[i][2] = hall.elementAt(i);
                    rowData[i][3] = seatno.elementAt(i);
                }
                // print table...
                String examName;
                r = DB.executeQuery("select name from exams where id=" + currentAttendanceExamID);
                r.next();
                examName = r.getString("name");
                DB.flushStatementOnly();
                new PrintTable("Absentees List", "Exam :" + examName, rowData, colData);

            }
            catch (SQLException ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        } 
        else {
            JOptionPane.showMessageDialog(rootPane, "Seating Not Arranged for this Exam ! No Absentee for this Exam !!!");
        }
    }//GEN-LAST:event_attendance_printAbsentiesList_MP

    private void attendance_searchExam_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendance_searchExam_ActionPerformed
        try {
            ResultSet r = DB.executeQuery("select name from exams where name like '%" + jTextField28.getText() + "%'");
            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("name"));
            }
            jList11.setListData(v);
        }
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }//GEN-LAST:event_attendance_searchExam_ActionPerformed
    String currentAttendanceExamID = "";
    private void attendance_examList_MP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendance_examList_MP
        if (jList11.getSelectedValue() != null) {
            String selectedSeatingExam = jList11.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from exams where name = '" + selectedSeatingExam + "'");
            try {
                r.next();
                jTextField32.setText(r.getString("name"));
                currentAttendanceExamID = r.getString("id");

                r = DB.executeQuery("select count(*) from seatings where examid = " + currentAttendanceExamID);
                if (r != null && r.next() && Integer.parseInt(r.getString(1)) > 0) {
                    jTextField31.setText("ARRANGED");
                } 
                else {
                    jTextField31.setText("NOT ARRANGED");
                }

            } 
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
    }//GEN-LAST:event_attendance_examList_MP
    String currentUser = "";
    private void userListMP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userListMP
        if (!jList12.isSelectionEmpty()) {
            String selectedUser = jList12.getSelectedValue().toString();

            ResultSet r = DB.executeQuery("select * from login where uname = '" + selectedUser + "'");
            try {
                r.next();
                jTextField34.setText(r.getString("uname"));
                currentUser = r.getString("uname");
                jTextField36.setText(r.getString("uloginname"));
                jTextArea6.setText(r.getString("udescription"));

                if (r.getString("utype").contentEquals("admin")) {
                    jComboBox11.setSelectedIndex(0);
                }
                else {
                    jComboBox11.setSelectedIndex(1);
                }
            } 
            catch (Exception ex) {
                Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                DB.flushStatementOnly();
            }
        }
}//GEN-LAST:event_userListMP

    private void user_updateMP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_updateMP
        if (jTextField34.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter User Name !!!");
        }
        else if (jTextField36.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Login Name !!!");
        }
        else {
            if (DB.executeUpdate("update login set "
                    + "uname='" + jTextField34.getText() + "', "
                    + "utype = '" + (jComboBox11.getSelectedIndex() == 0 ? "admin" : "staff") + "', "
                    + "uloginname='" + jTextField36.getText() + "', "
                    + "udescription='" + jTextArea6.getText() + "' "
                    + "where uname='" + currentUser + "'")) {
                JOptionPane.showMessageDialog(rootPane, "User Updated");
            } 
            else {
                JOptionPane.showMessageDialog(rootPane, "User Updation Failed !!!");
            }
        }
}//GEN-LAST:event_user_updateMP

    private void user_deleteMP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_deleteMP
        if (!currentUser.isEmpty()) {
            if (DB.executeUpdate("delete from login where uname='" + currentUser + "'")) {
                JOptionPane.showMessageDialog(rootPane, "User Deleted");
            } 
            else {
                JOptionPane.showMessageDialog(rootPane, "User Deletion Failed !!!");
            }
        } 
        else {
            JOptionPane.showMessageDialog(rootPane, "Select a User !!!");
        }
}//GEN-LAST:event_user_deleteMP

    private void addUserMP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserMP
        AddUser.main(null);
}//GEN-LAST:event_addUserMP

    private void user_search_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_search_ActionPerformed
        Vector staffNameList = new Vector();
        ResultSet r;

        if (!jTextField15.getText().isEmpty()) {
            String searchedClass = jTextField15.getText();
            r = DB.executeQuery("select uname from login where uname like '%" + searchedClass + "%'");
        }
        else {
            r = DB.executeQuery("select uname from login");
        }

        try {
            while (r.next()) {
                staffNameList.add(r.getString("uname"));
            }
        } 
        catch (Exception ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
        jList7.setListData(staffNameList);
    }//GEN-LAST:event_user_search_ActionPerformed

    private void loadStudentList() {
        try {
            ResultSet r = null;
            if (!jTextField8.getText().isEmpty()
                    && !jComboBox4.getSelectedItem().toString().contentEquals("Select Batch")
                    && !jComboBox5.getSelectedItem().toString().contentEquals("Select Dept")) {
                r = DB.executeQuery("select name from students where "
                        + "name like '%" + jTextField8.getText() + "%'"
                        + " and batchid=" + jComboBox4.getSelectedItem().toString()
                        + " and deptid='" + jComboBox5.getSelectedItem().toString() + "'");

            } 
            else if (!jComboBox4.getSelectedItem().toString().contentEquals("Select Batch")
                    && !jComboBox5.getSelectedItem().toString().contentEquals("Select Dept")) {
                r = DB.executeQuery("select name from students where "
                        + "batchid=" + jComboBox4.getSelectedItem().toString()
                        + " and deptid='" + jComboBox5.getSelectedItem().toString() + "'");
            } 
            else if (jComboBox4.getSelectedItem().toString().contentEquals("Select Batch")
                    && !jComboBox5.getSelectedItem().toString().contentEquals("Select Dept")) {
                r = DB.executeQuery("select name from students where "
                        + "deptid='" + jComboBox5.getSelectedItem().toString() + "'");
            } 
            else if (!jComboBox4.getSelectedItem().toString().contentEquals("Select Batch")
                    && jComboBox5.getSelectedItem().toString().contentEquals("Select Dept")) {
                r = DB.executeQuery("select name from students where "
                        + "batchid=" + jComboBox4.getSelectedItem().toString());
            } 
            else if (!jTextField8.getText().isEmpty()
                    && jComboBox4.getSelectedItem().toString().contentEquals("Select Batch")
                    && jComboBox5.getSelectedItem().toString().contentEquals("Select Dept")) {
                r = DB.executeQuery("select name from students where "
                        + "name like '%" + jTextField8.getText() + "%'");
            }
            else if (jTextField8.getText().isEmpty()
                    && jComboBox4.getSelectedItem().toString().contentEquals("Select Batch")
                    && jComboBox5.getSelectedItem().toString().contentEquals("Select Dept")) {
                r = DB.executeQuery("select name from students");
            }

            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("name"));
            }
            jList4.setListData(v);

        } 
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }

    private void loadSubjectList() {
        try {
            ResultSet r = null;
            if (!jTextField20.getText().isEmpty()
                    && !jComboBox2.getSelectedItem().toString().contentEquals("Select Scheme")
                    && !jComboBox3.getSelectedItem().toString().contentEquals("Select Semester")) {
                r = DB.executeQuery("select name from subjects where "
                        + "name like '%" + jTextField20.getText() + "%'"
                        + " and schemeid='" + jComboBox2.getSelectedItem().toString() + "'"
                        + " and semester='" + jComboBox3.getSelectedItem().toString() + "'");

            }
            else if (!jTextField20.getText().isEmpty()
                    && jComboBox2.getSelectedItem().toString().contentEquals("Select Scheme")
                    && jComboBox3.getSelectedItem().toString().contentEquals("Select Semester")) {
                r = DB.executeQuery("select name from subjects where "
                        + "name like '%" + jTextField20.getText() + "%'");

            }
            else if (jTextField20.getText().isEmpty()
                    && !jComboBox2.getSelectedItem().toString().contentEquals("Select Scheme")
                    && !jComboBox3.getSelectedItem().toString().contentEquals("Select Semester")) {
                r = DB.executeQuery("select name from subjects where "
                        + "schemeid='" + jComboBox2.getSelectedItem().toString() + "'"
                        + " and semester='" + jComboBox3.getSelectedItem().toString() + "'");

            }
            else if (jTextField20.getText().isEmpty()
                    && jComboBox2.getSelectedItem().toString().contentEquals("Select Scheme")
                    && !jComboBox3.getSelectedItem().toString().contentEquals("Select Semester")) {
                r = DB.executeQuery("select name from subjects where "
                        + "semester='" + jComboBox3.getSelectedItem().toString() + "'");

            }
            else if (jTextField20.getText().isEmpty()
                    && !jComboBox2.getSelectedItem().toString().contentEquals("Select Scheme")
                    && jComboBox3.getSelectedItem().toString().contentEquals("Select Semester")) {
                r = DB.executeQuery("select name from subjects where "
                        + "schemeid='" + jComboBox2.getSelectedItem().toString() + "'");

            }
            else if (jTextField20.getText().isEmpty()
                    && jComboBox2.getSelectedItem().toString().contentEquals("Select Scheme")
                    && jComboBox3.getSelectedItem().toString().contentEquals("Select Semester")) {
                r = DB.executeQuery("select name from subjects");
            }

            Vector v = new Vector();
            while (r != null && r.next()) {
                v.add(r.getString("name"));
            }
            jList8.setListData(v);
        }
        catch (SQLException ex) {
            Logger.getLogger(AdminWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            DB.flushStatementOnly();
        }
    }

    private void loadDataToFields() throws SQLException {
        // staff load dept
        Vector v = new Vector();
        v.add("Select Dept");
        ResultSet r = DB.executeQuery("select id from departments");
        if (r != null) {
            while (r.next()) {
                v.add(r.getString("id"));
            }
        }
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(v));
        // students search load dept
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(v));
        // dept list
        DB.flushStatementOnly();
        v.remove(0);
        jList6.setListData(v);
        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(v));

        // batch load scheme
        v = new Vector();
        v.add("Select Scheme");
        r = DB.executeQuery("select id from schemes");
        if (r != null) {
            while (r.next()) {
                v.add(r.getString("id"));
            }
        }
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(v));
        // subject load scheme
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(v));
        // scheme list
        v.remove(0);
        jList2.setListData(v);
        // subject details scheme
        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(v));
        DB.flushStatementOnly();

        // students search load batch
        v = new Vector();
        v.add("Select Batch");
        r = DB.executeQuery("select id from batches");
        if (r != null) {
            while (r.next()) {
                v.add(r.getString("id"));
            }
        }
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(v));
        // batch list
        v.remove(0);
        jList7.setListData(v);
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(v));
        DB.flushStatementOnly();

        // halls list
        v = new Vector();
        r = DB.executeQuery("select name from halls");
        if (r != null) {
            while (r.next()) {
                v.add(r.getString("name"));
            }
        }
        jList1.setListData(v);
        DB.flushStatementOnly();
        // Staff list
        v = new Vector();
        r = DB.executeQuery("select name from staffs");
        if (r != null) {
            while (r.next()) {
                v.add(r.getString("name"));
            }
        }
        jList3.setListData(v);
        DB.flushStatementOnly();
        // Exam list
        v = new Vector();
        r = DB.executeQuery("select name from exams");
        if (r != null) {
            while (r.next()) {
                v.add(r.getString("name"));
            }
        }
        jList9.setListData(v);
        jList10.setListData(v);
        jList11.setListData(v);
        DB.flushStatementOnly();
        // ... load user datas ...
        Vector<String> users = new Vector<String>();
        r = DB.executeQuery("select uname from login");
        while (r != null && r.next()) {
            users.add(r.getString("uname"));
        }
        jList12.setListData(users);
        DB.flushStatementOnly();
        loadSubjectList();
        loadStudentList();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //DB.flushStatementOnly();
                new AdminWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList10;
    private javax.swing.JList jList11;
    private javax.swing.JList jList12;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JList jList4;
    private javax.swing.JList jList6;
    private javax.swing.JList jList7;
    private javax.swing.JList jList8;
    private javax.swing.JList jList9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
